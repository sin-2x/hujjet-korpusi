/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserControlIndexRouteImport } from './routes/userControl/index'
import { Route as StatisticsIndexRouteImport } from './routes/statistics/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as FileManagementIndexRouteImport } from './routes/fileManagement/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserControlIndexRoute = UserControlIndexRouteImport.update({
  id: '/userControl/',
  path: '/userControl/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticsIndexRoute = StatisticsIndexRouteImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const FileManagementIndexRoute = FileManagementIndexRouteImport.update({
  id: '/fileManagement/',
  path: '/fileManagement/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fileManagement': typeof FileManagementIndexRoute
  '/login': typeof LoginIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/userControl': typeof UserControlIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fileManagement': typeof FileManagementIndexRoute
  '/login': typeof LoginIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/userControl': typeof UserControlIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/fileManagement/': typeof FileManagementIndexRoute
  '/login/': typeof LoginIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
  '/userControl/': typeof UserControlIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/fileManagement' | '/login' | '/statistics' | '/userControl'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/fileManagement' | '/login' | '/statistics' | '/userControl'
  id:
    | '__root__'
    | '/'
    | '/fileManagement/'
    | '/login/'
    | '/statistics/'
    | '/userControl/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FileManagementIndexRoute: typeof FileManagementIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
  UserControlIndexRoute: typeof UserControlIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/userControl/': {
      id: '/userControl/'
      path: '/userControl'
      fullPath: '/userControl'
      preLoaderRoute: typeof UserControlIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fileManagement/': {
      id: '/fileManagement/'
      path: '/fileManagement'
      fullPath: '/fileManagement'
      preLoaderRoute: typeof FileManagementIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FileManagementIndexRoute: FileManagementIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
  UserControlIndexRoute: UserControlIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
